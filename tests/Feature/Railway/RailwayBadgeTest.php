<?php

namespace Tests\Feature\Railway;

use App\Livewire\Admin\Railway\Badge\BadgeList;
use App\Livewire\Admin\Railway\Badge\BadgeShow;
use App\Models\Railway\RailwayBadgeReward;
use App\Models\User;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Livewire\Livewire;
use Tests\TestCase;

class RailwayBadgeTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Model::unsetEventDispatcher();
        Model::flushEventListeners();
        $this->user = User::factory()->create([
            "admin" => true,
        ]);
    }

    public function test_render_list()
    {
        Livewire::actingAs($this->user)
            ->test(BadgeList::class)
            ->assertStatus(200);
    }

    public function test_adding_badge()
    {
        Livewire::actingAs($this->user)
            ->test(BadgeList::class)
            ->set("name", "test")
            ->set("action", "test")
            ->set("action_count", 1)
            ->call("adding")
            ->assertStatus(200);

        $this->assertDatabaseHas("railway_badges", [
            "name" => "test",
            "action" => "test",
            "action_count" => 1
        ]);
    }

    public function test_delete_badge()
    {
        $badge = \App\Models\Railway\RailwayBadge::factory()->create();

        Livewire::actingAs($this->user)
            ->test(BadgeList::class)
            ->call("delete", $badge->id)
            ->assertStatus(200);

        $this->assertDatabaseMissing("railway_badges", [
            "id" => $badge->id
        ]);
    }

    public function test_show_render()
    {
        $badge = \App\Models\Railway\RailwayBadge::factory()->create([
            "name" => "test",
            "action" => "test",
            "action_count" => 1
        ]);

        Livewire::actingAs($this->user)
            ->test(BadgeShow::class, ["id" => $badge->id])
            ->assertStatus(200);
    }

    public function test_adding_badge_reward()
    {
        $badge = \App\Models\Railway\RailwayBadge::factory()->create([
            "name" => "test",
            "action" => "test",
            "action_count" => 1
        ]);

        Livewire::actingAs($this->user)
            ->test(BadgeShow::class, ["id" => $badge->id])
            ->set('type', 'argent')
            ->set('value', 100)
            ->call("adding")
            ->assertStatus(200);

        $this->assertDatabaseHas("railway_badge_rewards", [
            "type" => "argent",
            "value" => 100,
            "railway_badge_id" => $badge->id
        ]);
    }

    public function test_delete_badge_reward()
    {
        $badge = \App\Models\Railway\RailwayBadge::factory()->create([
            "name" => "test",
            "action" => "test",
            "action_count" => 1
        ]);

        $reward = RailwayBadgeReward::factory()->create([
            "type" => "argent",
            "value" => 100,
            "railway_badge_id" => $badge->id
        ]);

        Livewire::actingAs($this->user)
            ->test(BadgeShow::class, ["id" => $badge->id])
            ->call("delete", $reward->id)
            ->assertStatus(200);
    }
}
