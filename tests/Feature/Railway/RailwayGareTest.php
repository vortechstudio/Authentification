<?php

namespace Tests\Feature\Railway;

use App\Livewire\Admin\Railway\Gare\GareList;
use App\Livewire\Admin\Railway\Gare\GareShow;
use App\Models\User;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class RailwayGareTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Model::unsetEventDispatcher();
        Model::flushEventListeners();
        $this->user = User::factory()->create([
            "admin" => true,
        ]);

        $this->gare = \App\Models\Railway\Gare::factory()->create();
        $this->hub = $this->gare->hub()->create([
            "price_base" => 100,
            "taxe_hub_price" => 10,
            "active" => true,
            "visual" => "beta",
            "gare_id" => $this->gare->id,
        ]);
    }

    public function test_rendering_gare_list()
    {
        \Livewire::actingAs($this->user)
            ->test(GareList::class)
            ->assertSeeHtml("Liste des Gares");
    }

    public function test_deleting_gare()
    {

        \Livewire::actingAs($this->user)
            ->test(GareList::class)
            ->call('delete', $this->gare->id)
            ->assertStatus(200);
    }

    public function test_rendering_gare_show()
    {
        \Livewire::actingAs($this->user)
            ->test(GareShow::class, [
                "id" => $this->gare->id
            ])
            ->assertStatus(200);
    }

    public function test_desactive_gare()
    {
        $this->hub->update([
            "active" => false,
        ]);

        \Livewire::actingAs($this->user)
            ->test(GareShow::class, [
                "id" => $this->gare->id
            ])
            ->call('active')
            ->assertStatus(200);
    }

    public function test_active_gare()
    {
        $this->hub->update([
            "active" => true,
        ]);

        \Livewire::actingAs($this->user)
            ->test(GareShow::class, [
                "id" => $this->gare->id
            ])
            ->call('desactive')
            ->assertStatus(200);
    }

    public function test_production_gare()
    {
        $this->hub->update([
            "visual" => "beta",
        ]);

        \Livewire::actingAs($this->user)
            ->test(GareShow::class, [
                "id" => $this->gare->id
            ])
            ->call('production')
            ->assertStatus(200);
    }

    public function test_delete_gare()
    {
        \Livewire::actingAs($this->user)
            ->test(GareShow::class, [
                "id" => $this->gare->id
            ])
            ->call('delete')
            ->assertStatus(200);
    }


}
