<?php

namespace Tests\Feature\Auth;

use App\Livewire\Auth\Login;
use App\Models\User;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Livewire\Livewire;
use Tests\TestCase;

class LoginTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Model::unsetEventDispatcher();
        Model::flushEventListeners();
        $this->user = User::factory()->create([
            'email' => 'test@test.com',
        ]);
    }

    public function test_render_login_page()
    {
        $this->withoutExceptionHandling();

        $response = Livewire::test(Login::class);

        $response->assertStatus(200);
    }

    public function test_login_without_provider()
    {
        $this->withoutExceptionHandling();

        $response = Livewire::test(Login::class)
            ->set('email', 'test@test.com')
            ->set('password', 'password')
            ->call('login');

        $response->assertStatus(200);
    }

    public function test_login_with_error_login_form()
    {
        $this->withoutExceptionHandling();

        $response = Livewire::test(Login::class)
            ->set('email', 'test@test.com')
            ->set('password', '0000')
            ->call('login');

        $response->assertSee('Compte inexistant');
    }
}
